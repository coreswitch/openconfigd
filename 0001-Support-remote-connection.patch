From b318bfb4df5cc5475d959d10956de478f3adac15 Mon Sep 17 00:00:00 2001
From: Tatsuro Matsumoto <tatsuro.matsumoto.ty@apresiasystems.co.jp>
Date: Wed, 25 Nov 2020 10:48:29 +0000
Subject: [PATCH] Support remote connection.

---
 bash_completion.d/cli  |  11 ++-
 cli_command/main.go    |  18 +++--
 config/grpc.go         |  30 ++++----
 config/subscribe.go    |  16 +++-
 proto/openconfig.pb.go | 171 +++++++++++++++++++++++------------------
 proto/openconfig.proto |  17 ++--
 6 files changed, 155 insertions(+), 108 deletions(-)

diff --git a/bash_completion.d/cli b/bash_completion.d/cli
index e15109e..433912c 100644
--- a/bash_completion.d/cli
+++ b/bash_completion.d/cli
@@ -37,6 +37,9 @@ fi
 
 # CLI command tool name.
 cli_command=cli_command
+if [[ ${CLI_REMOTE} ]]; then
+  remote_opt=-h=${CLI_REMOTE}
+fi
 
 declare -x CLI_STYLE=juniper
 declare -x CLI_MODE="exec"
@@ -163,9 +166,9 @@ _cli_set_completions ()
   OIFS=${IFS}
 
   if [[ -z "$current" ]];then
-    IFS='' input=$(${cli_command} -t -m ${CLI_MODE} ${COMP_WORDS[*]})
+    IFS='' input=$(${cli_command} ${remote_opt} -t -m ${CLI_MODE} ${COMP_WORDS[*]})
   else
-    IFS='' input=$(${cli_command} -c -m ${CLI_MODE} ${COMP_WORDS[*]})
+    IFS='' input=$(${cli_command} ${remote_opt} -c -m ${CLI_MODE} ${COMP_WORDS[*]})
   fi
   declare -i first=1
   while read line; do
@@ -249,7 +252,7 @@ _cli_exec ()
   fi
 
   OIFS=${IFS}
-  IFS='' input=$(${cli_command} ${JSON_FLAG} -m ${CLI_MODE} $@)
+  IFS='' input=$(${cli_command} ${remote_opt} ${JSON_FLAG} -m ${CLI_MODE} $@)
   while read line; do
     if [[ ${first} -eq 1 ]];then
       result=${line}
@@ -288,7 +291,7 @@ _cli_register_first_level_command ()
   shopt -s expand_aliases
   unalias -a
   OOIFS=${IFS}
-  IFS=''  input=$(${cli_command} -f -m ${CLI_MODE})
+  IFS=''  input=$(${cli_command} ${remote_opt} -f -m ${CLI_MODE})
   while read cmd; do
     IFS='' seq_input=$(seq 1 ${#cmd})
     while read pos; do
diff --git a/cli_command/main.go b/cli_command/main.go
index b89ee09..2f3b384 100644
--- a/cli_command/main.go
+++ b/cli_command/main.go
@@ -47,8 +47,8 @@ func privilegeGet() (priv uint32) {
 	return
 }
 
-func show(port int, json bool) {
-	conn, err := grpc.Dial(fmt.Sprintf(":%d", port), grpc.WithInsecure())
+func show(host string, port int, json bool) {
+	conn, err := grpc.Dial(fmt.Sprintf("%s:%d", host, port), grpc.WithInsecure())
 	if err != nil {
 		fmt.Println(err)
 		return
@@ -95,8 +95,8 @@ func output(reply *rpc.ExecReply) {
 	fmt.Println(reply.Lines)
 }
 
-func redirect(req *rpc.ExecRequest, port uint32) {
-	conn, err := grpc.Dial(fmt.Sprintf(":%d", port), grpc.WithInsecure())
+func redirect(req *rpc.ExecRequest, host string, port uint32) {
+	conn, err := grpc.Dial(fmt.Sprintf("%s:%d", host, port), grpc.WithInsecure())
 	if err != nil {
 		fmt.Println("Fail to dial:", err)
 		return
@@ -134,9 +134,9 @@ func exec(conn *grpc.ClientConn, modeFlag string, jsonFlag bool) {
 
 	switch reply.Code {
 	case rpc.ExecCode_REDIRECT:
-		redirect(req, reply.Port)
+		redirect(req, reply.Host,reply.Port)
 	case rpc.ExecCode_REDIRECT_SHOW:
-		show(int(reply.Port), jsonFlag)
+		show(reply.Host, int(reply.Port), jsonFlag)
 	default:
 		output(reply)
 	}
@@ -174,6 +174,7 @@ func main() {
 		firstFlag bool
 		modeFlag  string
 		showFlag  bool
+		hostFlag  string
 		portFlag  int
 		jsonFlag  bool
 	)
@@ -182,12 +183,13 @@ func main() {
 	flag.BoolVar(&trailFlag, "t", false, "Command has trailing space")
 	flag.StringVar(&modeFlag, "m", "exec", "Current mode")
 	flag.BoolVar(&showFlag, "s", false, "Show command flag")
+	flag.StringVar(&hostFlag, "h", "", "Host address")
 	flag.IntVar(&portFlag, "p", 2650, "Show command port")
 	flag.BoolVar(&jsonFlag, "j", false, "Show output in JSON format")
 	flag.Parse()
 
 	// Connect to service.
-	conn, err := grpc.Dial(fmt.Sprintf(":%d", portFlag), grpc.WithInsecure())
+	conn, err := grpc.Dial(fmt.Sprintf("%s:%d", hostFlag, portFlag), grpc.WithInsecure())
 	if err != nil {
 		fmt.Println("Fail to dial:", err)
 		return
@@ -197,7 +199,7 @@ func main() {
 	// Figure out which gRPC service to use.
 	switch {
 	case showFlag:
-		show(portFlag, jsonFlag)
+		show(hostFlag, portFlag, jsonFlag)
 	case compFlag || trailFlag || firstFlag:
 		completion(conn, compFlag, trailFlag, firstFlag, modeFlag)
 	default:
diff --git a/config/grpc.go b/config/grpc.go
index c7b7d0e..0fdcb6a 100644
--- a/config/grpc.go
+++ b/config/grpc.go
@@ -97,7 +97,10 @@ func execute(Cmd *cmd.Cmd, mode string, args []string, line string, reply *rpc.E
 				} else {
 					reply.Code = rpc.ExecCode_REDIRECT
 				}
-				port, _ := strconv.ParseUint(instStr, 10, 32)
+				pair := strings.Split(instStr, ":")
+				host := pair[0]
+				port, _ := strconv.ParseUint(pair[1], 10, 32)
+				reply.Host = host
 				reply.Port = uint32(port)
 				ret = "SuccessRedirect\n"
 				ret += instStr
@@ -193,12 +196,7 @@ func (s *openconfigServer) DoExec(_ context.Context, req *rpc.ExecRequest) (*rpc
 
 func (s *registerServer) DoRegister(_ context.Context, req *rpc.RegisterRequest) (*rpc.RegisterReply, error) {
 	reply := new(rpc.RegisterReply)
-	port := GrpcModuleMap[req.Module]
-	if port == "" {
-		port = "2601"
-	} else {
-		//fmt.Println("Set port", port)
-	}
+	host := GrpcModuleMap[req.Module]
 
 	inst := CliSuccessRedirect
 	if req.Code == rpc.ExecCode_REDIRECT_SHOW {
@@ -208,7 +206,7 @@ func (s *registerServer) DoRegister(_ context.Context, req *rpc.RegisterRequest)
 	if mode := s.cmd.LookupMode(req.Mode); mode != nil {
 		mode.InstallLine(req.Line,
 			func(Args []string) (int, string) {
-				return inst, port
+				return inst, host
 			},
 			&cmd.Param{Helps: req.Helps, Privilege: req.Privilege, Dynamic: true})
 	}
@@ -217,7 +215,12 @@ func (s *registerServer) DoRegister(_ context.Context, req *rpc.RegisterRequest)
 
 func (s *registerServer) DoRegisterModule(_ context.Context, req *rpc.RegisterModuleRequest) (*rpc.RegisterModuleReply, error) {
 	reply := new(rpc.RegisterModuleReply)
-	GrpcModuleMap[req.Module] = req.Port
+	host := req.Host
+	port := req.Port
+	if port == "" {
+		port = "2601"
+	}
+	GrpcModuleMap[req.Module] = fmt.Sprintf("%s:%s", host, port)
 	return reply, nil
 }
 
@@ -282,12 +285,13 @@ func DynamicCompletion(commands []string, module string, args []string) []string
 	// }
 
 	// XXX Need to leverage stream connection. (No need of make a new connection)
-	host := ":2601" // Default port.
+	host := SubscribeHostLookup(module)
 	port := SubscribePortLookup(module)
-	if port != 0 {
-		host = fmt.Sprintf(":%d", port)
+	if port == 0 {
+		port = 2601 // default port
 	}
-	conn, err := grpc.Dial(host, grpc.WithInsecure())
+	url := fmt.Sprintf("%s:%d", host, port)
+	conn, err := grpc.Dial(url, grpc.WithInsecure())
 	if err != nil {
 		fmt.Println("DynamicCompletion: Fail to dial", err)
 		return []string{}
diff --git a/config/subscribe.go b/config/subscribe.go
index b0156f2..5ef4400 100644
--- a/config/subscribe.go
+++ b/config/subscribe.go
@@ -194,6 +194,7 @@ type Subscriber struct {
 	Type    int
 	Module  string
 	Port    uint32
+	Host    string
 	stream  rpc.Config_DoConfigServer
 	done    chan rpc.ConfigType
 	SubPath []SubPath
@@ -492,6 +493,15 @@ func SubscribePortLookup(name string) uint32 {
 	return 0
 }
 
+func SubscribeHostLookup(name string) string {
+	for _, sub := range SubscribeMap {
+		if sub.Module == name {
+			return sub.Host
+		}
+	}
+	return ""
+}
+
 func NewPath(name string, parent *Path) *Path {
 	return &Path{Name: name, Parent: parent, Map: PathMap{}}
 }
@@ -564,7 +574,7 @@ func SubscribeRemoteAdd(stream rpc.Config_DoConfigServer, req *rpc.ConfigRequest
 
 	sub := SubscribeLookup(stream)
 	if sub == nil {
-		sub = &Subscriber{Module: req.Module, Port: req.Port, stream: stream}
+		sub = &Subscriber{Module: req.Module, Host: req.Host, Port: req.Port, stream: stream}
 		SubscribeMap[sub] = sub
 	}
 
@@ -606,7 +616,7 @@ func SubscribeAdd(stream rpc.Config_DoConfigServer, req *rpc.ConfigRequest) {
 
 	sub := SubscribeLookup(stream)
 	if sub == nil {
-		sub = &Subscriber{Module: req.Module, Port: req.Port, stream: stream}
+		sub = &Subscriber{Module: req.Module, Host: req.Host, Port: req.Port, stream: stream}
 		SubscribeMap[sub] = sub
 	}
 
@@ -657,7 +667,7 @@ func SubscribeRemoteAddMulti(stream rpc.Config_DoConfigServer, req *rpc.ConfigRe
 
 	sub := SubscribeLookup(stream)
 	if sub == nil {
-		sub = &Subscriber{Module: req.Module, Port: req.Port, stream: stream}
+		sub = &Subscriber{Module: req.Module, Host: req.Host, Port: req.Port, stream: stream}
 		SubscribeMap[sub] = sub
 	}
 
diff --git a/proto/openconfig.pb.go b/proto/openconfig.pb.go
index efc530e..cfcf20e 100644
--- a/proto/openconfig.pb.go
+++ b/proto/openconfig.pb.go
@@ -280,8 +280,9 @@ func (m *ExecRequest) GetContent() ExecConentType {
 type ExecReply struct {
 	Code       ExecCode `protobuf:"varint,1,opt,name=code,enum=openconfig.ExecCode" json:"code,omitempty"`
 	Lines      string   `protobuf:"bytes,2,opt,name=lines" json:"lines,omitempty"`
-	Port       uint32   `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
-	Candidates []string `protobuf:"bytes,4,rep,name=candidates" json:"candidates,omitempty"`
+	Host       string   `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
+	Port       uint32   `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
+	Candidates []string `protobuf:"bytes,5,rep,name=candidates" json:"candidates,omitempty"`
 }
 
 func (m *ExecReply) Reset()                    { *m = ExecReply{} }
@@ -303,6 +304,13 @@ func (m *ExecReply) GetLines() string {
 	return ""
 }
 
+func (m *ExecReply) GetHost() string {
+	if m != nil {
+		return m.Host
+	}
+	return ""
+}
+
 func (m *ExecReply) GetPort() uint32 {
 	if m != nil {
 		return m.Port
@@ -402,7 +410,8 @@ func (m *RegisterReply) GetCallbackid() int32 {
 // The request message mode information.
 type RegisterModuleRequest struct {
 	Module string `protobuf:"bytes,1,opt,name=module" json:"module,omitempty"`
-	Port   string `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
+	Host   string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
+	Port   string `protobuf:"bytes,3,opt,name=port" json:"port,omitempty"`
 }
 
 func (m *RegisterModuleRequest) Reset()                    { *m = RegisterModuleRequest{} }
@@ -417,6 +426,13 @@ func (m *RegisterModuleRequest) GetModule() string {
 	return ""
 }
 
+func (m *RegisterModuleRequest) GetHost() string {
+	if m != nil {
+		return m.Host
+	}
+	return ""
+}
+
 func (m *RegisterModuleRequest) GetPort() string {
 	if m != nil {
 		return m.Port
@@ -518,10 +534,11 @@ func (m *SubscribeRequest) GetPath() string {
 type ConfigRequest struct {
 	Type      ConfigType          `protobuf:"varint,1,opt,name=type,enum=openconfig.ConfigType" json:"type,omitempty"`
 	Module    string              `protobuf:"bytes,2,opt,name=module" json:"module,omitempty"`
-	Port      uint32              `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
-	Subtype   SubscribeType       `protobuf:"varint,4,opt,name=subtype,enum=openconfig.SubscribeType" json:"subtype,omitempty"`
-	Path      []string            `protobuf:"bytes,5,rep,name=path" json:"path,omitempty"`
-	Subscribe []*SubscribeRequest `protobuf:"bytes,6,rep,name=subscribe" json:"subscribe,omitempty"`
+	Host      string              `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
+	Port      uint32              `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
+	Subtype   SubscribeType       `protobuf:"varint,5,opt,name=subtype,enum=openconfig.SubscribeType" json:"subtype,omitempty"`
+	Path      []string            `protobuf:"bytes,6,rep,name=path" json:"path,omitempty"`
+	Subscribe []*SubscribeRequest `protobuf:"bytes,7,rep,name=subscribe" json:"subscribe,omitempty"`
 }
 
 func (m *ConfigRequest) Reset()                    { *m = ConfigRequest{} }
@@ -543,6 +560,13 @@ func (m *ConfigRequest) GetModule() string {
 	return ""
 }
 
+func (m *ConfigRequest) GetHost() string {
+	if m != nil {
+		return m.Host
+	}
+	return ""
+}
+
 func (m *ConfigRequest) GetPort() uint32 {
 	if m != nil {
 		return m.Port
@@ -1096,71 +1120,72 @@ var _Show_serviceDesc = grpc.ServiceDesc{
 func init() { proto.RegisterFile("openconfig.proto", fileDescriptor0) }
 
 var fileDescriptor0 = []byte{
-	// 1042 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x4b, 0x73, 0xe3, 0x44,
-	0x10, 0xb6, 0x6c, 0xf9, 0xd5, 0x8e, 0x93, 0xd9, 0xd9, 0x3c, 0x9c, 0x64, 0x17, 0x82, 0x0e, 0x94,
-	0xcb, 0x55, 0xbb, 0x6c, 0x65, 0x97, 0x4b, 0xaa, 0x38, 0x28, 0xd2, 0x24, 0x11, 0x65, 0xc9, 0x41,
-	0x92, 0x21, 0x70, 0x51, 0xf9, 0x21, 0x12, 0x83, 0x2d, 0x09, 0x4b, 0x06, 0x7c, 0xe2, 0x0f, 0xf1,
-	0x2f, 0xf8, 0x29, 0x5c, 0xb9, 0x73, 0xa5, 0x66, 0xa4, 0xd1, 0xc3, 0xf1, 0x26, 0x9c, 0xd2, 0xdd,
-	0xd3, 0xdd, 0xfa, 0xbe, 0xaf, 0x67, 0x3a, 0x06, 0xe4, 0x07, 0xae, 0x37, 0xf1, 0xbd, 0x1f, 0x67,
-	0xf7, 0x6f, 0x83, 0xa5, 0x1f, 0xf9, 0x18, 0xb2, 0x88, 0xf4, 0xb7, 0x00, 0x2d, 0xf2, 0xbb, 0x3b,
-	0x31, 0xdd, 0x5f, 0x56, 0x6e, 0x18, 0xe1, 0x2e, 0x88, 0xd1, 0x3a, 0x70, 0x3b, 0xc2, 0x99, 0xd0,
-	0xdd, 0x3d, 0xdf, 0x7f, 0x9b, 0x2b, 0xa6, 0x69, 0xf6, 0x3a, 0x70, 0x4d, 0x96, 0x81, 0x31, 0x88,
-	0x0b, 0x7f, 0xea, 0x76, 0xca, 0x67, 0x42, 0xb7, 0x69, 0x32, 0x1b, 0xbf, 0x82, 0x66, 0xb0, 0x9c,
-	0xfd, 0x3a, 0x9b, 0xbb, 0xf7, 0x6e, 0xa7, 0x72, 0x26, 0x74, 0xdb, 0x66, 0x16, 0xa0, 0x15, 0xf3,
-	0x99, 0xe7, 0x76, 0xc4, 0xb8, 0x82, 0xda, 0xf8, 0x04, 0x1a, 0x13, 0x7f, 0xb1, 0x18, 0x79, 0xd3,
-	0xb0, 0x53, 0x3d, 0xab, 0x74, 0x9b, 0x66, 0xea, 0xd3, 0xfc, 0xd1, 0xf2, 0x3e, 0xec, 0xd4, 0x58,
-	0x9c, 0xd9, 0xf8, 0x03, 0xd4, 0x27, 0xbe, 0x17, 0xb9, 0x5e, 0xd4, 0xa9, 0x33, 0x88, 0x27, 0x9b,
-	0x10, 0x15, 0xdf, 0x73, 0xbd, 0x88, 0x01, 0xe5, 0xa9, 0xd2, 0x1f, 0xd0, 0x8c, 0x49, 0x06, 0xf3,
-	0x35, 0xa5, 0x38, 0xa1, 0xc0, 0x3f, 0x42, 0x51, 0xf1, 0xa7, 0xae, 0xc9, 0x32, 0xf0, 0x3e, 0x54,
-	0x29, 0xc8, 0x30, 0xe1, 0x18, 0x3b, 0x14, 0x56, 0xe0, 0x2f, 0xa3, 0x84, 0x1f, 0xb3, 0xf1, 0x27,
-	0x00, 0x93, 0x91, 0x37, 0x9d, 0x4d, 0x47, 0x91, 0x1b, 0x76, 0x44, 0x06, 0x38, 0x17, 0x91, 0xfe,
-	0x12, 0x60, 0xcf, 0x74, 0xef, 0x67, 0x61, 0xe4, 0x2e, 0xb9, 0xd4, 0x18, 0x44, 0x6f, 0xb4, 0x88,
-	0x71, 0x34, 0x4d, 0x66, 0xe3, 0x43, 0xa8, 0x2d, 0xfc, 0xe9, 0x6a, 0xce, 0x65, 0x4d, 0xbc, 0x54,
-	0xec, 0x4a, 0x4e, 0xec, 0x6d, 0x72, 0x16, 0x06, 0x50, 0xdd, 0x1c, 0xc0, 0x3e, 0x54, 0x1f, 0xdc,
-	0x79, 0xc0, 0x15, 0x8d, 0x9d, 0x54, 0x8f, 0xfa, 0x73, 0x7a, 0x48, 0x5f, 0x40, 0x3b, 0x23, 0x41,
-	0xa5, 0x64, 0xb4, 0xe7, 0xf3, 0xf1, 0x68, 0xf2, 0xf3, 0x6c, 0xca, 0x88, 0x54, 0xcd, 0x5c, 0x44,
-	0x52, 0xe0, 0x80, 0x17, 0xe8, 0x8c, 0x08, 0xe7, 0x9e, 0xf1, 0x14, 0x36, 0x79, 0x32, 0x6d, 0x93,
-	0x4b, 0x45, 0x6d, 0xe9, 0x0d, 0xbc, 0xdc, 0x6c, 0x42, 0xbf, 0x7d, 0x08, 0xb5, 0xa5, 0x1b, 0xae,
-	0xe6, 0x51, 0xf2, 0xdd, 0xc4, 0x93, 0xae, 0xe1, 0x05, 0x85, 0x5d, 0xfc, 0xde, 0x33, 0x40, 0xd3,
-	0xab, 0x56, 0xce, 0xae, 0x9a, 0xf4, 0x15, 0xec, 0xe5, 0x1b, 0x3d, 0xf1, 0xcd, 0x74, 0x14, 0xe5,
-	0x6c, 0x14, 0xd2, 0x10, 0x90, 0xb5, 0x1a, 0x87, 0x93, 0xe5, 0x6c, 0x9c, 0xc2, 0x78, 0x53, 0x78,
-	0x5d, 0xc7, 0x79, 0xa9, 0xd3, 0xdc, 0xe2, 0x13, 0x0b, 0x46, 0xd1, 0x43, 0xaa, 0xc6, 0x28, 0x7a,
-	0x90, 0xfe, 0x11, 0xa0, 0xad, 0xb0, 0x12, 0xde, 0xb4, 0x57, 0x68, 0x7a, 0x98, 0x6f, 0x1a, 0x27,
-	0xe6, 0x3a, 0x3e, 0x71, 0xbf, 0x1e, 0xdd, 0xe9, 0xf7, 0x50, 0x0f, 0x57, 0x63, 0xd6, 0x5a, 0x7c,
-	0x0e, 0x2f, 0xcf, 0x4c, 0x21, 0xc7, 0x6f, 0x99, 0xd9, 0xf8, 0x02, 0x9a, 0x21, 0xcf, 0x66, 0x57,
-	0xaf, 0x75, 0xfe, 0x6a, 0x6b, 0xab, 0x84, 0x91, 0x99, 0xa5, 0x4b, 0x6b, 0x68, 0x71, 0xb6, 0x4f,
-	0x0d, 0x80, 0x6b, 0x50, 0xfe, 0x1f, 0x1a, 0x70, 0x88, 0x95, 0x1c, 0x44, 0x0c, 0xe2, 0x4f, 0xa1,
-	0xef, 0xf1, 0xb7, 0x44, 0x6d, 0xe9, 0x4b, 0x68, 0x59, 0x0f, 0xfe, 0x6f, 0xb9, 0xe7, 0xca, 0x66,
-	0x2c, 0xe4, 0x9e, 0x1b, 0x2f, 0xa3, 0x9f, 0x6d, 0x24, 0x65, 0xaf, 0xa1, 0x19, 0x97, 0x51, 0xbc,
-	0x08, 0x2a, 0x61, 0xb4, 0x4c, 0x6a, 0xa8, 0xd9, 0x5b, 0x42, 0x83, 0x2f, 0x52, 0xdc, 0x00, 0x91,
-	0xdc, 0x11, 0x05, 0x95, 0xf0, 0x0e, 0x34, 0x94, 0x81, 0x7e, 0xdb, 0x27, 0x36, 0x41, 0x02, 0x3e,
-	0x85, 0x23, 0xee, 0x39, 0xb6, 0x29, 0x6b, 0x7d, 0xcd, 0xb8, 0x76, 0xac, 0x5b, 0x59, 0x21, 0xa8,
-	0x5c, 0x38, 0xbc, 0xd2, 0x4c, 0xcb, 0x76, 0x94, 0x81, 0xae, 0xcb, 0x86, 0x6a, 0xa1, 0x0a, 0xde,
-	0x07, 0x94, 0x1e, 0xaa, 0xdf, 0x1b, 0xb2, 0xae, 0x29, 0x48, 0xec, 0x7d, 0x80, 0xdd, 0xe2, 0x66,
-	0xc4, 0x08, 0x76, 0x94, 0x81, 0x61, 0x13, 0xc3, 0x76, 0x6c, 0x72, 0x67, 0xa3, 0x52, 0x3e, 0xf2,
-	0xb5, 0x35, 0x30, 0x90, 0xd0, 0xf3, 0x62, 0xa4, 0xf4, 0xfd, 0xe3, 0x16, 0xd4, 0xad, 0xa1, 0xa2,
-	0x10, 0xcb, 0x42, 0x25, 0xea, 0x18, 0x03, 0x5d, 0xb6, 0x95, 0x1b, 0x24, 0xe0, 0x5d, 0x00, 0xcd,
-	0x48, 0xb1, 0x97, 0x71, 0x1b, 0x9a, 0xb2, 0x7e, 0xa9, 0x5d, 0x0f, 0x07, 0x43, 0x0a, 0xa8, 0x01,
-	0xa2, 0x75, 0x33, 0xf8, 0x0e, 0x89, 0x94, 0xa2, 0x49, 0x54, 0xcd, 0x24, 0x8a, 0x8d, 0xaa, 0xf8,
-	0x05, 0xb4, 0xb9, 0xe7, 0xb0, 0x84, 0x5a, 0xef, 0x5f, 0x01, 0x20, 0x1b, 0x16, 0xae, 0x43, 0xc5,
-	0x22, 0x14, 0x19, 0x40, 0x4d, 0x25, 0x89, 0x32, 0x18, 0x76, 0xbf, 0x95, 0xfb, 0x9a, 0x2a, 0xdb,
-	0xc4, 0xb1, 0x6c, 0xd9, 0xb4, 0x51, 0x99, 0x22, 0x4f, 0x63, 0xc4, 0x50, 0x63, 0x15, 0xb2, 0xac,
-	0x04, 0xb6, 0x88, 0x5f, 0xc2, 0x5e, 0x1a, 0xbd, 0x92, 0xb5, 0x3e, 0x51, 0x51, 0x35, 0xa6, 0xad,
-	0xeb, 0x9a, 0x9d, 0xb4, 0xab, 0x51, 0x42, 0x49, 0x84, 0x36, 0xab, 0x53, 0x42, 0xd6, 0xf0, 0xd2,
-	0x52, 0x4c, 0xed, 0x92, 0xa0, 0x06, 0xed, 0x92, 0xba, 0x8e, 0x3e, 0xec, 0xdb, 0x1a, 0x6a, 0xe2,
-	0x03, 0x78, 0x91, 0x05, 0x4d, 0xf2, 0xcd, 0x90, 0x58, 0x36, 0x02, 0xbc, 0x07, 0x2d, 0xaa, 0xa5,
-	0xa3, 0x0c, 0x8c, 0x2b, 0xed, 0x1a, 0xb5, 0x68, 0x9e, 0x7c, 0xab, 0x39, 0x8a, 0xdc, 0xef, 0x3b,
-	0x57, 0x9a, 0xa1, 0x59, 0x37, 0x44, 0x45, 0x3b, 0xbd, 0xcf, 0xa1, 0x5d, 0x78, 0x4e, 0x54, 0xe1,
-	0x64, 0xa8, 0xa8, 0x44, 0x25, 0x8c, 0x27, 0x72, 0x7e, 0x09, 0x22, 0x9d, 0x08, 0xbe, 0x80, 0x9a,
-	0xea, 0x33, 0xeb, 0x68, 0x73, 0x5b, 0x27, 0xb7, 0xf5, 0xe4, 0xe0, 0xf1, 0x41, 0x30, 0x5f, 0x4b,
-	0xa5, 0xf3, 0x3f, 0x05, 0x68, 0xf0, 0x75, 0x8a, 0xaf, 0x00, 0x54, 0x3f, 0xf5, 0x4e, 0xf3, 0x35,
-	0x1b, 0xff, 0xad, 0x4e, 0x8e, 0xb7, 0x1f, 0xb2, 0xa6, 0xf8, 0x0e, 0x50, 0xd6, 0x27, 0x5e, 0x98,
-	0xf8, 0xb3, 0x6d, 0x05, 0x85, 0xad, 0x7c, 0xf2, 0xe9, 0x53, 0x29, 0x31, 0xdc, 0x1f, 0x00, 0xb2,
-	0x25, 0x8c, 0xfb, 0xb0, 0x13, 0x13, 0x4f, 0xfc, 0xd7, 0x9b, 0x2c, 0x8b, 0xfd, 0x4f, 0x3f, 0x76,
-	0x1c, 0xf7, 0x36, 0xa0, 0x16, 0xdf, 0x37, 0xac, 0x42, 0x43, 0xf5, 0x13, 0xfb, 0xf8, 0xf1, 0xf2,
-	0xe0, 0xfd, 0x8e, 0xb6, 0x1d, 0xb1, 0x5e, 0x5d, 0xe1, 0x1d, 0x1b, 0x0f, 0x7d, 0xf9, 0xf8, 0x22,
-	0xf9, 0x5b, 0x48, 0xcf, 0xad, 0x92, 0xe2, 0x70, 0xd2, 0x65, 0x21, 0x95, 0xde, 0x09, 0xe3, 0x1a,
-	0xfb, 0x89, 0xf6, 0xfe, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xae, 0x58, 0x3b, 0xb6, 0x09,
+	// 1058 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xcd, 0x72, 0xe3, 0x44,
+	0x10, 0xb6, 0x6c, 0xf9, 0x47, 0xed, 0x38, 0x99, 0x9d, 0xcd, 0x8f, 0x93, 0xec, 0x42, 0xd0, 0x81,
+	0x72, 0xb9, 0x6a, 0x97, 0xad, 0xec, 0x72, 0x49, 0x15, 0x07, 0x45, 0x9a, 0x24, 0xa2, 0x2c, 0x39,
+	0x48, 0x32, 0x1b, 0xb8, 0xa8, 0x1c, 0x5b, 0x24, 0x06, 0x47, 0x12, 0x96, 0x0c, 0xf8, 0xc6, 0x3b,
+	0xf0, 0x1a, 0xbc, 0x05, 0x8f, 0xc2, 0x43, 0x70, 0xa5, 0x66, 0xa4, 0xd1, 0x8f, 0xd7, 0x9b, 0xec,
+	0x29, 0xdd, 0x3d, 0xdd, 0xad, 0xef, 0xfb, 0x7a, 0xa6, 0x63, 0x40, 0x41, 0xe8, 0xf9, 0x93, 0xc0,
+	0xff, 0x69, 0x76, 0xf7, 0x3a, 0x5c, 0x04, 0x71, 0x80, 0x21, 0x8f, 0xc8, 0xff, 0x0a, 0xd0, 0x26,
+	0x7f, 0x78, 0x13, 0xcb, 0xfb, 0x75, 0xe9, 0x45, 0x31, 0xee, 0x81, 0x18, 0xaf, 0x42, 0xaf, 0x2b,
+	0x9c, 0x08, 0xbd, 0xed, 0xd3, 0xdd, 0xd7, 0x85, 0x62, 0x9a, 0xe6, 0xac, 0x42, 0xcf, 0x62, 0x19,
+	0x18, 0x83, 0xf8, 0x10, 0x4c, 0xbd, 0x6e, 0xf5, 0x44, 0xe8, 0x49, 0x16, 0xb3, 0xf1, 0x0b, 0x90,
+	0xc2, 0xc5, 0xec, 0xb7, 0xd9, 0xdc, 0xbb, 0xf3, 0xba, 0xb5, 0x13, 0xa1, 0xd7, 0xb1, 0xf2, 0x00,
+	0xad, 0x98, 0xcf, 0x7c, 0xaf, 0x2b, 0x26, 0x15, 0xd4, 0xc6, 0x47, 0xd0, 0x9a, 0x04, 0x0f, 0x0f,
+	0x63, 0x7f, 0x1a, 0x75, 0xeb, 0x27, 0xb5, 0x9e, 0x64, 0x65, 0x3e, 0xcd, 0x1f, 0x2f, 0xee, 0xa2,
+	0x6e, 0x83, 0xc5, 0x99, 0x8d, 0xdf, 0x41, 0x73, 0x12, 0xf8, 0xb1, 0xe7, 0xc7, 0xdd, 0x26, 0x83,
+	0x78, 0xb4, 0x0e, 0x51, 0x0d, 0x7c, 0xcf, 0x8f, 0x19, 0x50, 0x9e, 0x2a, 0xff, 0x25, 0x80, 0x94,
+	0xb0, 0x0c, 0xe7, 0x2b, 0xca, 0x71, 0x42, 0x91, 0x7f, 0x84, 0xa3, 0x1a, 0x4c, 0x3d, 0x8b, 0x65,
+	0xe0, 0x5d, 0xa8, 0x53, 0x94, 0x51, 0x4a, 0x32, 0x71, 0x28, 0xae, 0xfb, 0x20, 0x8a, 0x19, 0x41,
+	0xc9, 0x62, 0x36, 0x8d, 0x85, 0xc1, 0x22, 0x66, 0xdc, 0x3a, 0x16, 0xb3, 0xf1, 0x67, 0x00, 0x93,
+	0xb1, 0x3f, 0x9d, 0x4d, 0xc7, 0xb1, 0xc7, 0xd9, 0x15, 0x22, 0xf2, 0x3f, 0x02, 0xec, 0x58, 0xde,
+	0xdd, 0x2c, 0x8a, 0xbd, 0x05, 0xd7, 0x1f, 0x83, 0xe8, 0x8f, 0x1f, 0x12, 0x6c, 0x92, 0xc5, 0x6c,
+	0xbc, 0x0f, 0x8d, 0x87, 0x60, 0xba, 0x9c, 0x73, 0xad, 0x53, 0x2f, 0x9b, 0x40, 0xad, 0x30, 0x81,
+	0x4d, 0x1a, 0x97, 0xa6, 0x52, 0x5f, 0x9f, 0xca, 0x2e, 0xd4, 0xef, 0xbd, 0x79, 0xc8, 0x65, 0x4e,
+	0x9c, 0x4c, 0xa3, 0xe6, 0x53, 0x1a, 0xc9, 0x5f, 0x41, 0x27, 0x27, 0x41, 0xe5, 0x65, 0xb4, 0xe7,
+	0xf3, 0xdb, 0xf1, 0xe4, 0x97, 0xd9, 0x94, 0x11, 0xa9, 0x5b, 0x85, 0x88, 0xfc, 0x1e, 0xf6, 0x78,
+	0x81, 0xc1, 0x88, 0x70, 0xee, 0x39, 0x4f, 0x61, 0x9d, 0x27, 0xd3, 0xbb, 0xba, 0x41, 0xef, 0x94,
+	0x3b, 0xb5, 0xe5, 0x57, 0xf0, 0x7c, 0xbd, 0x31, 0xc5, 0xb3, 0x0f, 0x8d, 0x85, 0x17, 0x2d, 0xe7,
+	0x71, 0x8a, 0x25, 0xf5, 0xe4, 0x4b, 0x78, 0x46, 0xa9, 0x94, 0x31, 0x3c, 0x01, 0x3e, 0xbb, 0x93,
+	0xd5, 0xfc, 0x4e, 0xca, 0xdf, 0xc0, 0x4e, 0xb1, 0xd1, 0x23, 0xdf, 0xcc, 0xc6, 0x53, 0xcd, 0xc7,
+	0x23, 0x8f, 0x00, 0xd9, 0xcb, 0xdb, 0x68, 0xb2, 0x98, 0xdd, 0x66, 0x30, 0x5e, 0x95, 0x9e, 0xe1,
+	0x61, 0x51, 0xfe, 0x2c, 0xb7, 0xfc, 0x16, 0xc3, 0x71, 0x7c, 0xcf, 0xdb, 0x52, 0x5b, 0xfe, 0xb3,
+	0x0a, 0x1d, 0x95, 0x95, 0xf0, 0xa6, 0xfd, 0x52, 0xd3, 0xfd, 0x62, 0xd3, 0x24, 0xb1, 0xd0, 0xf1,
+	0x91, 0x3b, 0xf7, 0x49, 0x77, 0xff, 0x2d, 0x34, 0xa3, 0xe5, 0x2d, 0xfb, 0x5c, 0xfd, 0x29, 0x0e,
+	0x3c, 0x33, 0xa3, 0x91, 0x3e, 0x78, 0x6a, 0xe3, 0x33, 0x90, 0x22, 0x9e, 0xdd, 0x6d, 0x9e, 0xd4,
+	0x7a, 0xed, 0xd3, 0x17, 0x1b, 0x5b, 0xa5, 0x2c, 0xad, 0x3c, 0x5d, 0x5e, 0x41, 0x9b, 0x2b, 0xf0,
+	0xd8, 0x50, 0xb8, 0x2e, 0xd5, 0x4f, 0xd0, 0x85, 0x43, 0xac, 0x15, 0x20, 0x62, 0x10, 0x7f, 0x8e,
+	0x02, 0x9f, 0xbf, 0x39, 0x6a, 0xcb, 0x5f, 0x43, 0xdb, 0xbe, 0x0f, 0x7e, 0x2f, 0x3c, 0x6b, 0x36,
+	0x77, 0xa1, 0xf0, 0x2c, 0x79, 0x19, 0xfd, 0x6c, 0x2b, 0x2d, 0x7b, 0x09, 0x52, 0x52, 0x46, 0xf1,
+	0x22, 0xa8, 0x45, 0xf1, 0x22, 0xad, 0xa1, 0x66, 0x7f, 0x01, 0x2d, 0xbe, 0x85, 0x71, 0x0b, 0x44,
+	0x72, 0x43, 0x54, 0x54, 0xc1, 0x5b, 0xd0, 0x52, 0x87, 0xc6, 0xf5, 0x80, 0x38, 0x04, 0x09, 0xf8,
+	0x18, 0x0e, 0xb8, 0xe7, 0x3a, 0x96, 0xa2, 0x0f, 0x74, 0xf3, 0xd2, 0xb5, 0xaf, 0x15, 0x95, 0xa0,
+	0x6a, 0xe9, 0xf0, 0x42, 0xb7, 0x6c, 0xc7, 0x55, 0x87, 0x86, 0xa1, 0x98, 0x9a, 0x8d, 0x6a, 0x78,
+	0x17, 0x50, 0x76, 0xa8, 0xfd, 0x60, 0x2a, 0x86, 0xae, 0x22, 0xb1, 0xff, 0x0e, 0xb6, 0xcb, 0x6b,
+	0x15, 0x23, 0xd8, 0x52, 0x87, 0xa6, 0x43, 0x4c, 0xc7, 0x75, 0xc8, 0x8d, 0x83, 0x2a, 0xc5, 0xc8,
+	0xb7, 0xf6, 0xd0, 0x44, 0x42, 0xdf, 0x4f, 0x90, 0xd2, 0x3d, 0x81, 0xdb, 0xd0, 0xb4, 0x47, 0xaa,
+	0x4a, 0x6c, 0x1b, 0x55, 0xa8, 0x63, 0x0e, 0x0d, 0xc5, 0x51, 0xaf, 0x90, 0x80, 0xb7, 0x01, 0x74,
+	0x33, 0xc3, 0x5e, 0xc5, 0x1d, 0x90, 0x14, 0xe3, 0x5c, 0xbf, 0x1c, 0x0d, 0x47, 0x14, 0x50, 0x0b,
+	0x44, 0xfb, 0x6a, 0xf8, 0x1e, 0x89, 0x94, 0xa2, 0x45, 0x34, 0xdd, 0x22, 0xaa, 0x83, 0xea, 0xf8,
+	0x19, 0x74, 0xb8, 0xe7, 0xb2, 0x84, 0x46, 0xff, 0x3f, 0x01, 0x20, 0x1f, 0x16, 0x6e, 0x42, 0xcd,
+	0x26, 0x14, 0x19, 0x40, 0x43, 0x23, 0xa9, 0x32, 0x18, 0xb6, 0xbf, 0x57, 0x06, 0xba, 0xa6, 0x38,
+	0xc4, 0xb5, 0x1d, 0xc5, 0x72, 0x50, 0x95, 0x22, 0xcf, 0x62, 0xc4, 0xd4, 0x12, 0x15, 0xf2, 0xac,
+	0x14, 0xb6, 0x88, 0x9f, 0xc3, 0x4e, 0x16, 0xbd, 0x50, 0xf4, 0x01, 0xd1, 0x50, 0x3d, 0xa1, 0x6d,
+	0x18, 0xba, 0x93, 0xb6, 0x6b, 0x50, 0x42, 0x69, 0x84, 0x36, 0x6b, 0x52, 0x42, 0xf6, 0xe8, 0xdc,
+	0x56, 0x2d, 0xfd, 0x9c, 0xa0, 0x16, 0xed, 0x92, 0xb9, 0xae, 0x31, 0x1a, 0x38, 0x3a, 0x92, 0xf0,
+	0x1e, 0x3c, 0xcb, 0x83, 0x16, 0xf9, 0x6e, 0x44, 0x6c, 0x07, 0x01, 0xde, 0x81, 0x36, 0xd5, 0xd2,
+	0x55, 0x87, 0xe6, 0x85, 0x7e, 0x89, 0xda, 0x34, 0x4f, 0xb9, 0xd6, 0x5d, 0x55, 0x19, 0x0c, 0xdc,
+	0x0b, 0xdd, 0xd4, 0xed, 0x2b, 0xa2, 0xa1, 0xad, 0xfe, 0x97, 0xd0, 0x29, 0x3d, 0x27, 0xaa, 0x70,
+	0x3a, 0x54, 0x54, 0xa1, 0x12, 0x26, 0x13, 0x39, 0x3d, 0x07, 0x91, 0x4e, 0x04, 0x9f, 0x41, 0x43,
+	0x0b, 0x98, 0x75, 0xb0, 0xbe, 0xd5, 0xd3, 0xdb, 0x7a, 0xb4, 0xf7, 0xe1, 0x41, 0x38, 0x5f, 0xc9,
+	0x95, 0xd3, 0xbf, 0x05, 0x68, 0xf1, 0x15, 0x8b, 0x2f, 0x00, 0xb4, 0x20, 0xf3, 0x8e, 0x8b, 0x35,
+	0x6b, 0xff, 0xd5, 0x8e, 0x0e, 0x37, 0x1f, 0xb2, 0xa6, 0xf8, 0x06, 0x50, 0xde, 0x27, 0x59, 0xa2,
+	0xf8, 0x8b, 0x4d, 0x05, 0xa5, 0x4d, 0x7d, 0xf4, 0xf9, 0x63, 0x29, 0x09, 0xdc, 0x1f, 0x01, 0xf2,
+	0xc5, 0x8c, 0x07, 0xb0, 0x95, 0x10, 0x4f, 0xfd, 0x97, 0xeb, 0x2c, 0xcb, 0xfd, 0x8f, 0x3f, 0x76,
+	0x9c, 0xf4, 0x36, 0xa1, 0x91, 0xdc, 0x37, 0xac, 0x41, 0x4b, 0x0b, 0x52, 0xfb, 0xf0, 0xc3, 0xe5,
+	0xc1, 0xfb, 0x1d, 0x6c, 0x3a, 0x62, 0xbd, 0x7a, 0xc2, 0x1b, 0x36, 0x1e, 0xfa, 0xf2, 0xf1, 0x59,
+	0xfa, 0xb7, 0x94, 0x5e, 0x58, 0x25, 0xe5, 0xe1, 0x64, 0xcb, 0x42, 0xae, 0xbc, 0x11, 0x6e, 0x1b,
+	0xec, 0xf7, 0xdd, 0xdb, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x03, 0x7e, 0x8c, 0xe8, 0xf3, 0x09,
 	0x00, 0x00,
 }
diff --git a/proto/openconfig.proto b/proto/openconfig.proto
index 533f8a0..3186d79 100644
--- a/proto/openconfig.proto
+++ b/proto/openconfig.proto
@@ -62,8 +62,9 @@ enum ExecCode {
 message ExecReply {
 	ExecCode code = 1;
 	string lines = 2;
-	uint32 port = 3;
-	repeated string candidates = 4;
+	string host = 3;
+	uint32 port = 4;
+	repeated string candidates = 5;
 }
 
 // The Command register.
@@ -91,7 +92,8 @@ message RegisterReply {
 // The request message mode information.
 message RegisterModuleRequest {
 	string module = 1;
-	string port = 2;
+	string host = 2;
+	string port = 3;
 }
 
 // The response message containing the callbackID for the mode change.
@@ -152,10 +154,11 @@ message SubscribeRequest {
 message ConfigRequest {
 	ConfigType type = 1;
 	string module = 2;
-	uint32 port = 3;
-	SubscribeType subtype = 4;
-	repeated string path = 5;
-	repeated SubscribeRequest subscribe = 6;
+	string host = 3;
+	uint32 port = 4;
+	SubscribeType subtype = 5;
+	repeated string path = 6;
+	repeated SubscribeRequest subscribe = 7;
 }
 
 message ConfigReply {
-- 
2.17.1

